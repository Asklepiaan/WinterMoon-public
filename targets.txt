0.6 release requirements

remove sdl2 buffer bodge - complete
add weather effects - complete
sort out gpu texturing - complete
fix north carolina parallax - complete
add choice buttons - complete
add window capture - complete
update gender system - complete
Remove save button - complete
Create menu system - complete
Create save function - complete
update docs.txt - complete
update vars.txt - complete
create function to clear a gpu texture - complete
update sample game dialogue - complete

0.6 release additions

targets.txt to track targets and changes
Winter.middle() to get the midpoint of an image with padding target
Winter.saveGame() to simplify saving
Winter.cleanup() to clear render queue
Winter.checkFile() removed
Winter.processGender() to autofill player pronouns
GLFW.killWindow() to also set logic to exit
GLFW.killTexture() for gpu texture culling
updated gender processing
Ruby.startup() to initialise the mruby vm
Ruby.kill() to kill the mruby vm
fillHash!() to clean up missing space in hashes
added page targets
added .dmg distribution package
improved CFBundle info list

0.6 release bugs

-= Fixed =-
load game not working																- fixed, bad file access check
save game not working																- fixed, bad file access check
crash on macos 26																	- fixed, was a gatekeeper issue
-= It's a feature now =-
red shift on Winter.getWindow() return												- no workaround, its a feature for now
-= Bodged =-
gpu textured images cannot be modified												- call GLFW.killTexture(image) before modifying
some pronoun replacements erase characters from a string that should not be erased	- bodged in a ruby script for now due to a bug in lua gsub
-= Not fixed =-
file read checks on read only system crash											- no work around, dont run from .dmg

-------------------------------------------------------------------------------

0.7 release requirements

port rpgmaker clone from sdl2
simplify weather effects
optimise and adjust choice buttons
create proper menu system
optimise real time pronoun insertion - complete
fix window capture red shift - use GLFW.modifyImage(image, WINTER_AETHER_CLEANUP, 0, 0, 0, 0) to remove red shift, window capture preserves non complete aether
port project abyss engine
add multiple audio track processing

0.7 release additions

added new game node targetting
fixed audio looping
GLFW.transformImage() to perform homography matrix transforms
improved performance on A12Z processor
added intel support
moved audio functions to dedicated table
25% peformance boost on all platforms
GLFW.saveImage() to save a loaded image
GLFW.blitImage() for software blitting
switched from lodepng to native code
added Metal rendering functions

0.7 release bugs

-= Fixed =-
memory corruption on GLFW.blitImage()								- fixed, was actually Winter.cleanup()
-= It's a feature now =-
red shift on Winter.getWindow() return								- keeping as logic feature, use WINTER_AETHER_CLEANUP render node to remove
-= Bodged =-
metal renderer hangs entire system and external processes sometimes	- possibly fixed
-= Not fixed =-
file write checks on read only system crash							- bad file access checks due to bug in lua

-------------------------------------------------------------------------------

0.8 release requirements

port rpgmaker clone from sdl2
simplify weather effects in visual novel
optimise and adjust choice buttons in visual novel
create global menu system
port project abyss engine
add multiple audio track processing - complete

0.8 release additions

improved metal render bindings speed by 20%
refactored code to remove some unneeded functions
sunset GLFWimage usage even in GLFW mode
added Plush.raycast()
added Plush.setPlayerHeight()
added Plush.getPlayerHeight()
added Plush.setPlayerPosition()
added Plush.getPlayerPosition()
added Plush.setPlayerRotation()
added Plush.getPlayerRotation()
added Plush.setRenderDistance()
added Plush.getRenderDistance()
added Plush.setTilt()
added Plush.getTilt()
added Plush.setMap()
added Plush.movePlayer()
added Plush.printImage()
added Plush.threads()
added Plush.fog())
up to 70% performance increase on all platforms when using cpu bound 2d renderer instead of gpu
added Plush.setFov()
added Plush.getFov()
added Plush.dither()
added Plush.skew()
added Plush.sortVertex()
added Plush.createCube()
added Plush.createFace()
added debuggerdeep flag to enable performance intensive debug logs
fixed Render.blit() docs
added Plush.bilinear()
added Plush.trimImage()
added Plush.bilinearSolid()
added Plush.dontmovePlayer()
added Plush.round90()
added Plush.createImage()
added textframebuffer debug flag
added Plush.within()
added Plush.checkImage()
rebound Metal.saveImage() to Plush.saveImage()
rebound Metal.blitImage() to Plush.blitImage()
rebound Metal.transformImage() to Plush.transformImage()
rebound Metal.modifyImage() to Plush.modifyImage()
rebound Metal.mirrorImage() to Plush.mirrorImage()
rebound Metal.killImage() to Plush.killImage()
rebound Metal.imageSize() to Plush.imageSize()
rebound Metal.loadPNG() to Plush.loadPNG()
added experimental support for macOS 10.5 ppc32 (10.5-10.7 x86 through Rosetta)
changed from cpp11 to cpp17
added makefile optional targets to set host arch properly
set text slide modes to make clicking noises
added a variable with hardware metadata
added ray tracing
added Plush.insertReflection()
added Plush.setReflection()
added Plush.setRaytrace()
fixed arbitrary quad support in ray tracer
switched from ray tracing to path tracing
added Winter.orbit()
added Plush.savePlushImage()
added Plush.loadPlushImage()
rebound Plush.round90() to Winter.round90()
rebound Plush.within() to Winter.within()
added Plush.translate()
added Plush.rotate()
added Plush.setLightLevel()
removed opengl support
added Plush.setSize()
added Ruby.runAsync()
added Ruby.clearAsync()
added Ruby.pauseAsync()
added Ruby.resumeAsync()
added Ruby.setRounding()
added lua_var()
added lua_var?()
added set_lua_var()
added WinterScript language support
added Winter.runScript()
added Winter.getVar()
added Winter.setVar()
added getLua()
added setLua()
added print()
added getTimeMs()
added random()
added toString()
added toNumber()

0.8 release bugs

-= Fixed =-
metal renderer occasinally hangs other apps																- fixed, read the documentation
rays cast into void now demolish performance															- fixed, switched from dda to modified lazy sweep
light paths are not obstructed by arbitrary quads														- fixed, modified lazy sweep
light paths do not obey transparent colour blending														- fixed, now pass colour and aether data back from light obsturction checks for light blending
-= It's a feature now =-
-= Bodged =-
Winter.orbit() works poorly in 3d models																- aip, use Plush.rotate() instead
-= Not fixed =-
file write checks on read only system crash																- bug in lua file access checks
Plush.sortVertex() improperly applies painter															- aip
Plush.sortVertex() improperly culls some faces															- aip
Plush.createFace() is not written yet																	- aip
Plush.project() does not support roll yet																- aip
higher frame rates prevent text slide clicks from playing												- issue with mixer implimentation
light paths have fucky hit detection with auto generated roof/floor tiles								- issue with path tracing cpu optimisation
quads only have 1 side so they can be illuminated from the back											- issue with ray tracing cpu optimisation
PlushImage native loading causes segmentation faults													- skill issue with developer
path tracing has poor colour blending when interacting with objects smaller than 3 inches				- issue with path tracing cpu optimisation
path tracing has no colour blending when interacting with auto generated quads							- aip
Ruby.resumeAsync() does not work																		- aip
aset_lua_var() is not thread safe																		- probably aip
WinterScript floating point data is able to read arbitrary data from external macos processes as noise	- probably CVE